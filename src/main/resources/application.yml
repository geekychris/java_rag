server:
  port: 8080

spring:
  application:
    name: rag-service
  ai:
    ollama:
      base-url: http://localhost:11434
      chat:
        model: llama2
      embedding:
        model: llama2

opensearch:
  host: localhost
  port: 30920
  scheme: http
  connection-timeout: 5000
  socket-timeout: 60000

rag:
  default-index-name: documents
  embedding-dimension: 4096
  max-search-results: 10
  summarization:
    enabled: true
    model: llama2
    max-input-tokens: 8000
    max-output-tokens: 1000
    temperature: 0.3
    system-prompt: "You are an AI assistant that provides concise, accurate summaries based on search results and user queries."

document:
  processing:
    # Directory scanning configuration
    directory-scan:
      max-files-per-scan: 10000
      default-output-directory: "/tmp/document-scans"
      async-processing: true
      cleanup-completed-scans-after-hours: 24
    
    # CSV streaming configuration
    csv:
      batch-size: 100
      max-record-size: 1048576  # 1MB
      max-concurrent-streams: 5
      stream-timeout-minutes: 60
      cleanup-completed-streams-after-hours: 12
    
    # Document extraction configuration
    extraction:
      max-file-size: 104857600  # 100MB
      timeout-seconds: 300
      supported-extensions:
        - pdf
        - txt
        - docx
        - doc
        - rtf
        - html
        - htm
        - xml
        - odt
        - ods
        - odp
        - pptx
        - ppt
        - xlsx
        - xls
        - csv
      
      # Apache Tika configuration
      tika:
        max-string-length: -1  # No limit
        detect-language: false
        extract-metadata: true
      
      # PDF-specific settings
      pdf:
        extract-images: false
        extract-annotations: true
        max-pages: -1  # No limit

logging:
  level:
    com.example.ragservice: DEBUG
    org.opensearch: INFO
    org.springframework.ai: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      cors:
        allowed-origins: "http://localhost:3000,http://127.0.0.1:3000"
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
        allow-credentials: false
        max-age: 3600
  endpoint:
    health:
      show-details: always
